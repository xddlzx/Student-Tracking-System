services:
  db:
    image: postgres:15
    container_name: lgs_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/00_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: ./backend
    container_name: lgs_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SESSION_COOKIE_NAME: ${SESSION_COOKIE_NAME}
      CSRF_COOKIE_NAME: ${CSRF_COOKIE_NAME}
      SESSION_TTL_SECONDS: ${SESSION_TTL_SECONDS}
      RATE_LIMIT_WINDOW_SECONDS: ${RATE_LIMIT_WINDOW_SECONDS}
      RATE_LIMIT_MAX_AUTH_ATTEMPTS: ${RATE_LIMIT_MAX_AUTH_ATTEMPTS}
      PASSWORD_MIN_LENGTH: ${PASSWORD_MIN_LENGTH}
      PASSWORD_REQUIRE_SYMBOL: ${PASSWORD_REQUIRE_SYMBOL}
      PASSWORD_REQUIRE_NUMBER: ${PASSWORD_REQUIRE_NUMBER}
      PASSWORD_REQUIRE_UPPER: ${PASSWORD_REQUIRE_UPPER}
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: lgs_frontend
    depends_on:
      app:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      PUBLIC_BACKEND_URL: http://app:8000
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    container_name: lgs_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"

volumes:
  db_data:
